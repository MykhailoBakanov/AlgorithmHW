Task 1
Приведите пример использования амортизированного анализа в практике.

Один из примеров это динамический массив, который представляет собой массив с динамическим размером.
Он может расти и сжиматься по мере необходимости, чтобы обеспечить эффективное использование памяти.


Task 2
Рассмотрите задачу динамического увеличения массива. 
Реализуйте функцию, которая принимает на вход массив и число элементов, и возвращает новый массив, который содержит все элементы исходного массива и заданное число новых элементов.


import java.util.Arrays;

public class ArrayUtil {
    public static String[] increaseArray(String[] arr, int numElements) {
        String[] newArr = Arrays.copyOf(arr, arr.length + numElements); // создаем новый массив с нужной длиной
        for (int i = arr.length; i < newArr.length; i++) {
            // пример ввода новых элементов пользователем
            System.out.print("Введите новый элемент: ");
            String newElement = System.console().readLine();
            newArr[i] = newElement; // добавляем новый элемент в конец массива
        }
        return newArr;
    }

    public static void main(String[] args) {
        String[] myArray = {"a", "b", "c", "d", "e"};
        String[] newArray = increaseArray(myArray, 3);
        System.out.println(Arrays.toString(newArray));
    }
}
