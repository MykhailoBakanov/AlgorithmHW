Task 1
//Найти индекс заданного числа в массиве: {3, 6, 4, 7, 2, 1, 9}
// Алгоритм на вход должен получать любой массив и одну цифру, индекс которой требуется найти.
Сложность алгоритма составляет O(n) , линейная сложность , идем по не отсортированному массиву и ищем нужно число.

Task2
//Реализовать алгоритм, который будет находить сумму квадратов всех элементов массива!  {3, 6, 4, 7, 2, 1, 9}
В этом примере думаю тоже сложность составляет O(n) ,  идем по не отсортированному массиву и ввзодим в квадрат каждое значение массива.

Task3
void test1(int n)
{
   if (n==1)
      return;
   for (int i=1; i<=n; i++)
       for (int j=1; j<=n; j++)
           System.out.println("*");
           break;
}
В этом примере у нас два вложенных цикла поэтому сложность составляет O(n2).

Task4

void test2(int n)
{
   int a = 0;
for (i = 0; i < n; i++)
   for (j = n; j > i; j--)
       a = a + i + j;   
}
В этом примере у нас так же два вложенных цикла поэтому сложность составляет O(n2).

Task5
void test3(int n)
     int i, j, a = 0;
for (i        i <=n; i   
   for (j = 2; j <=n; j   2)
       a=a+n/2;   
}
Отсутсвие некоторых знаков привожит в заблужднение но из того что я вижу то сложность тоже составляет O(n2).

Task6
*void test4(int n)
{
   int a = 0, i = n;
while (i > 0) {
   a += i;
   i /= 2;
}
}
Пройдемся по массиву в цикле обычная линейная сложность что равняется O(n).
